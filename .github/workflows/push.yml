name: Core

on:
  push:
    branches-ignore:
      - main
      - master
      - MOODLE_[0-9]+_STABLE
    tags-ignore:
      - v[0-9]+.[0-9]+.[0-9]+*
  workflow_dispatch:
    inputs:
      phpunit_extra_options:
        description: Additional options to apply to PHPUnit
        required: false
        default: ''

env:
  php: 8.3

jobs:
  Grunt:
    runs-on: ubuntu-22.04

    steps:
      - name: Checking out code
        uses: actions/checkout@v4

      - name: Configuring node & npm
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Installing node stuff
        run: npm install

      - name: Running grunt
        run: npx grunt

      - name: Looking for uncommitted changes
        # Add all files to the git index and then run diff --cached to see all changes.
        # This ensures that we get the status of all files, including new files.
        # We ignore npm-shrinkwrap.json to make the tasks immune to npm changes.
        run: |
          git add .
          git reset -- npm-shrinkwrap.json
          git diff --cached --exit-code

  PHPUnit:
    runs-on: ${{ matrix.os }}
    services:
      exttests:
        image: moodlehq/moodle-exttests
        ports:
          - 8080:80
      redis:
        image: redis
        ports:
          - 6379:6379
    strategy:
      fail-fast: false
      matrix:
        include:
          # MySQL builds always run with the lowest PHP supported version.
          - os: ubuntu-22.04
            php: 8.1
            extensions:
            db: mysqli
          # PostgreSQL builds always run with the highest PHP supported version.
          - os: ubuntu-22.04
            php: 8.3
            db: pgsql

    steps:
      - name: Setting up DB mysql
        if: ${{ matrix.db == 'mysqli' }}
        uses: moodlehq/mysql-action@v1
        with:
          collation server: utf8mb4_bin
          mysql version: 8.0
          mysql database: test
          mysql user: test
          mysql password: test
          use tmpfs: true
          tmpfs size: '1024M'
          extra conf: --skip-log-bin

      - name: Setting up DB pgsql
        if: ${{ matrix.db == 'pgsql' }}
        uses: m4nu56/postgresql-action@v1
        with:
          postgresql version: 13
          postgresql db: test
          postgresql user: test
          postgresql password: test

      - name: Configuring git vars
        uses: rlespinasse/github-slug-action@v4

      - name: Setting up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Checking out code from ${{ env.GITHUB_REF_SLUG }}
        uses: actions/checkout@v4

      - name: Setting up PHPUnit
        env:
          dbtype: ${{ matrix.db }}
        run: |
          echo "pathtophp=$(which php)" >> $GITHUB_ENV # Inject installed pathtophp to env. The template config needs it.
          cp .github/workflows/config-template.php config.php
          mkdir ../moodledata
          sudo locale-gen en_AU.UTF-8
          php admin/tool/phpunit/cli/init.php --no-composer-self-update

      - name: Running PHPUnit tests
        env:
          dbtype: ${{ matrix.db }}
          phpunit_options: ${{ secrets.phpunit_options }}
        run: vendor/bin/phpunit $phpunit_options ${{ inputs.phpunit_extra_options }}

  Web installation Behat testing:
    runs-on: ubuntu-latest

    steps:
      - name: Setting up DB PostgreSQL
        uses: m4nu56/postgresql-action@v1
        with:
          postgresql version: 13
          postgresql db: test
          postgresql user: test
          postgresql password: test

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
          if pg_isready -h localhost -p 5432 -U test; then
           echo "PostgreSQL is ready"
           break
          else
           echo "Waiting for PostgreSQL to be ready..."
           sleep 2
          fi
          done

      - name: Setting up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          ini-values: max_input_vars=5000
          coverage: none

      - name: Configuring git vars
        uses: rlespinasse/github-slug-action@v4

      - name: Checking out code from ${{ env.GITHUB_REF_SLUG }}
        uses: actions/checkout@v4
        working-directory: moodle

      - name: Clone Plugin repository
        uses: actions/checkout@v2
        with:
          repository: lameze/moodle-webinstall
          ref: main
          path: webinstall

      - name: Install Plugin Composer Dependencies
        run: composer install
        working-directory: webinstall

      - name: Start PHP built-in server
        run: |
          nohup php -S localhost:8080 -t . > server.log 2>&1 &
          echo "Waiting for PHP built-in server to be ready..."
          for i in {1..5}; do
            if nc -z localhost 8080; then
              echo "PHP built-in server is ready"
              break
            else
              echo "Waiting for PHP built-in server to be ready..."
              sleep 2
            fi
          done
        working-directory: moodle

      - name: Install Puppeteer
        run: npm install puppeteer
        working-directory: webinstall

      - name: Take screenshot of Moodle installation page
        run: node screenshot.js
        working-directory: webinstall

      - name: Run Behat tests
        run: vendor/bin/behat tests/behat/install.feature
        working-directory: webinstall

      - name: Print PHP built-in server logs
        if: always()
        run: cat server.log
        working-directory: moodle

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: screenshot
          path: webinstall/moodle.png
