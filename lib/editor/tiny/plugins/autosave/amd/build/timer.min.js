define("tiny_autosave/timer",["exports","./options","./storage"],(function(_exports,Options,Storage){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * Storage helper for the Moodle Tiny Autosave plugin.
   *
   * @module      tiny_autosave/plugin
   * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,Options=_interopRequireWildcard(Options),Storage=_interopRequireWildcard(Storage);return _exports.default=class{constructor(editor){this.editor=editor,this.timer=null}stop(){this.timer&&clearTimeout(this.timer),this.timer=null}shouldUpdateDraft(){return!this.editor.dom.isEmpty(this.editor.getBody())&&this.lastContent!==this.editor.getContent()}async runTimer(){this.timer&&(this.shouldUpdateDraft()&&(this.lastContent=this.editor.getContent(),await Storage.saveDraft(this.editor)),this.start())}start(){this.timer=setTimeout(this.runTimer.bind(this),Options.getAutosaveFrequecy(this.editor))}},_exports.default}));

//# sourceMappingURL=timer.min.js.map