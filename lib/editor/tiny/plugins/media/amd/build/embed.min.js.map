{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport {getMoodleLang} from 'editor_tiny/options';\nimport {component} from \"./common\";\n\nexport const MediaEmbed = class {\n\n    MEDIA_TYPES = {LINK: 'LINK', VIDEO: 'VIDEO', AUDIO: 'AUDIO'};\n\n    TRACK_KINDS = {\n        SUBTITLES: 'SUBTITLES',\n        CAPTIONS: 'CAPTIONS',\n        DESCRIPTIONS: 'DESCRIPTIONS',\n        CHAPTERS: 'CHAPTERS',\n        METADATA: 'METADATA'\n    };\n\n    CSS = {\n        FORM: 'form.tiny_media_form',\n        SOURCE: 'tiny_media_source',\n        TRACK: 'tiny_media_track',\n        MEDIA_SOURCE: 'tiny_media_media_source',\n        MEDIA_BROWSER: 'openmediabrowser',\n        LINK_SOURCE: 'tiny_media_link_source',\n        POSTER_SOURCE: 'tiny_media_poster_source',\n        TRACK_SOURCE: 'tiny_media_track_source',\n        DISPLAY_OPTIONS: 'tiny_media_display_options',\n        NAME_INPUT: 'tiny_media_name_entry',\n        TITLE_INPUT: 'tiny_media_title_entry',\n        URL_INPUT: 'tiny_media_url_entry',\n        POSTER_SIZE: 'tiny_media_poster_size',\n        LINK_SIZE: 'tiny_media_link_size',\n        WIDTH_INPUT: 'tiny_media_width_entry',\n        HEIGHT_INPUT: 'tiny_media_height_entry',\n        TRACK_KIND_INPUT: 'tiny_media_track_kind_entry',\n        TRACK_LABEL_INPUT: 'tiny_media_track_label_entry',\n        TRACK_LANG_INPUT: 'tiny_media_track_lang_entry',\n        TRACK_DEFAULT_SELECT: 'tiny_media_track_default',\n        MEDIA_CONTROLS_TOGGLE: 'tiny_media_controls',\n        MEDIA_AUTOPLAY_TOGGLE: 'tiny_media_autoplay',\n        MEDIA_MUTE_TOGGLE: 'tiny_media_mute',\n        MEDIA_LOOP_TOGGLE: 'tiny_media_loop',\n        ADVANCED_SETTINGS: 'tiny_media_advancedsettings',\n        INPUTSUBMIT: 'tiny_media_submit',\n        LINK: this.MEDIA_TYPES.LINK.toLowerCase(),\n        VIDEO: this.MEDIA_TYPES.VIDEO.toLowerCase(),\n        AUDIO: this.MEDIA_TYPES.AUDIO.toLowerCase(),\n        TRACK_SUBTITLES: this.TRACK_KINDS.SUBTITLES.toLowerCase(),\n        TRACK_CAPTIONS: this.TRACK_KINDS.CAPTIONS.toLowerCase(),\n        TRACK_DESCRIPTIONS: this.TRACK_KINDS.DESCRIPTIONS.toLowerCase(),\n        TRACK_CHAPTERS: this.TRACK_KINDS.CHAPTERS.toLowerCase(),\n        TRACK_METADATA: this.TRACK_KINDS.METADATA.toLowerCase(),\n    };\n\n    SELECTORS = {\n        SOURCE: '.' + this.CSS.SOURCE,\n        TRACK: '.' + this.CSS.TRACK,\n        MEDIA_SOURCE: '.' + this.CSS.MEDIA_SOURCE,\n        MEDIA_BROWSER: '.' + this.CSS.MEDIA_BROWSER,\n        POSTER_SOURCE: '.' + this.CSS.POSTER_SOURCE,\n        TRACK_SOURCE: '.' + this.CSS.TRACK_SOURCE,\n        DISPLAY_OPTIONS: '.' + this.CSS.DISPLAY_OPTIONS,\n        NAME_INPUT: '.' + this.CSS.NAME_INPUT,\n        TITLE_INPUT: '.' + this.CSS.TITLE_INPUT,\n        URL_INPUT: '.' + this.CSS.URL_INPUT,\n        POSTER_SIZE: '.' + this.CSS.POSTER_SIZE,\n        LINK_SIZE: '.' + this.CSS.LINK_SIZE,\n        WIDTH_INPUT: '.' + this.CSS.WIDTH_INPUT,\n        HEIGHT_INPUT: '.' + this.CSS.HEIGHT_INPUT,\n        TRACK_KIND_INPUT: '.' + this.CSS.TRACK_KIND_INPUT,\n        TRACK_LABEL_INPUT: '.' + this.CSS.TRACK_LABEL_INPUT,\n        TRACK_LANG_INPUT: '.' + this.CSS.TRACK_LANG_INPUT,\n        TRACK_DEFAULT_SELECT: '.' + this.CSS.TRACK_DEFAULT_SELECT,\n        MEDIA_CONTROLS_TOGGLE: '.' + this.CSS.MEDIA_CONTROLS_TOGGLE,\n        MEDIA_AUTOPLAY_TOGGLE: '.' + this.CSS.MEDIA_AUTOPLAY_TOGGLE,\n        MEDIA_MUTE_TOGGLE: '.' + this.CSS.MEDIA_MUTE_TOGGLE,\n        MEDIA_LOOP_TOGGLE: '.' + this.CSS.MEDIA_LOOP_TOGGLE,\n        ADVANCED_SETTINGS: '.' + this.CSS.ADVANCED_SETTINGS,\n        INPUTSUBMIT: '.' + this.CSS.INPUTSUBMIT,\n        LINK_TAB: 'li[data-medium-type=\"' + this.CSS.LINK + '\"]',\n        LINK_PANE: '.tab-pane[data-medium-type=\"' + this.CSS.LINK + '\"]',\n        VIDEO_TAB: 'li[data-medium-type=\"' + this.CSS.VIDEO + '\"]',\n        VIDEO_PANE: '.tab-pane[data-medium-type=\"' + this.CSS.VIDEO + '\"]',\n        AUDIO_TAB: 'li[data-medium-type=\"' + this.CSS.AUDIO + '\"]',\n        AUDIO_PANE: '.tab-pane[data-medium-type=\"' + this.CSS.AUDIO + '\"]',\n        TRACK_SUBTITLES_TAB: 'li[data-track-kind=\"' + this.CSS.TRACK_SUBTITLES + '\"]',\n        TRACK_SUBTITLES_PANE: '.tab-pane[data-track-kind=\"' + this.CSS.TRACK_SUBTITLES + '\"]',\n        TRACK_CAPTIONS_TAB: 'li[data-track-kind=\"' + this.CSS.TRACK_CAPTIONS + '\"]',\n        TRACK_CAPTIONS_PANE: '.tab-pane[data-track-kind=\"' + this.CSS.TRACK_CAPTIONS + '\"]',\n        TRACK_DESCRIPTIONS_TAB: 'li[data-track-kind=\"' + this.CSS.TRACK_DESCRIPTIONS + '\"]',\n        TRACK_DESCRIPTIONS_PANE: '.tab-pane[data-track-kind=\"' + this.CSS.TRACK_DESCRIPTIONS + '\"]',\n        TRACK_CHAPTERS_TAB: 'li[data-track-kind=\"' + this.CSS.TRACK_CHAPTERS + '\"]',\n        TRACK_CHAPTERS_PANE: '.tab-pane[data-track-kind=\"' + this.CSS.TRACK_CHAPTERS + '\"]',\n        TRACK_METADATA_TAB: 'li[data-track-kind=\"' + this.CSS.TRACK_METADATA + '\"]',\n        TRACK_METADATA_PANE: '.tab-pane[data-track-kind=\"' + this.CSS.TRACK_METADATA + '\"]'\n    };\n\n    form = null;\n    editor = null;\n    currentModal = null;\n    canShowFilePicker = true;\n    eventInitialized = false;\n\n    constructor(editor) {\n        this.editor = editor;\n    }\n\n    async displayDialogue() {\n        const [\n            addSourceHelpString,\n            tracksHelpString,\n            subtitlesHelpString,\n            captionsHelpString,\n            descriptionsHelpString,\n            chaptersHelpString,\n            metadataHelpString,\n        ] = await Promise.all([\n            getString('addsource_help', component),\n            getString('tracks_help', component),\n            getString('subtitles_help', component),\n            getString('captions_help', component),\n            getString('descriptions_help', component),\n            getString('chapters_help', component),\n            getString('metadata_help', component),\n        ]);\n        const languages = this.prepareMoodleLang();\n        Modal.create({\n            type: Modal.types.DEFAULT,\n            title: getString('createmedia', 'tiny_media'),\n            body: Templates.render('tiny_media/embed_media_modal', {\n                elementid: this.editor.getElement().id,\n                CSS: this.CSS,\n                showfilepicker: this.canShowFilePicker,\n                addsourcehelpicon: {\n                    text: addSourceHelpString,\n                },\n                trackshelpicon: {\n                    text: tracksHelpString,\n                },\n                subtitleshelpicon: {\n                    text: subtitlesHelpString,\n                },\n                captionshelpicon: {\n                    text: captionsHelpString,\n                },\n                descriptionshelpicon: {\n                    text: descriptionsHelpString,\n                },\n                chaptershelpicon: {\n                    text: chaptersHelpString,\n                },\n                metadatahelpicon: {\n                    text: metadataHelpString,\n                },\n                langsinstalled: languages.installed,\n                langsavailable: languages.available,\n            })\n        }).then(modal => {\n            this.currentModal = modal;\n            modal.getRoot().on(ModalEvents.bodyRendered, () => {\n                this.form = document.querySelector(this.CSS.FORM);\n                this.applyMediumProperties();\n                this.registerEventListeners();\n            });\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n            modal.show();\n            return modal;\n        });\n    }\n\n    getSelectedMedia() {\n        let mediaElm = this.editor.selection.getNode();\n\n        if (!mediaElm) {\n            return null;\n        }\n\n        if (mediaElm.nodeName.toLowerCase() === 'video' || mediaElm.nodeName.toLowerCase() === 'audio') {\n            return mediaElm;\n        }\n\n        if (mediaElm.querySelector('video')) {\n            return mediaElm.querySelector('video');\n        }\n\n        if (mediaElm.querySelector('audio')) {\n            return mediaElm.querySelector('audio');\n        }\n\n        return null;\n    }\n\n    getMediumProperties() {\n        const boolAttr = (elem, attr) => {\n            // As explained in MDL-64175, some OS (like Ubuntu), are removing the value for these attributes.\n            // So in order to check if attr=\"true\", we need to check if the attribute exists and if the value is empty or true.\n            return (elem.hasAttribute(attr) && (elem.getAttribute(attr) || elem.getAttribute(attr) === ''));\n        };\n\n        let tracks = {\n            subtitles: [],\n            captions: [],\n            descriptions: [],\n            chapters: [],\n            metadata: []\n        };\n        let sources = [];\n\n        const medium = this.getSelectedMedia();\n        if (!medium) {\n            return null;\n        }\n        medium.querySelectorAll('track').forEach(track => {\n            tracks[track.getAttribute('kind')].push({\n                src: track.getAttribute('src'),\n                srclang: track.getAttribute('srclang'),\n                label: track.getAttribute('label'),\n                defaultTrack: boolAttr(track, 'default')\n            });\n        });\n\n        medium.querySelectorAll('source').forEach(source => {\n            sources.push(source.src);\n        });\n\n        return {\n            type: medium.nodeName.toLowerCase() === 'video' ? this.MEDIA_TYPES.VIDEO : this.MEDIA_TYPES.AUDIO,\n            sources: sources,\n            poster: medium.getAttribute('poster'),\n            title: medium.getAttribute('title'),\n            width: medium.getAttribute('width'),\n            height: medium.getAttribute('height'),\n            autoplay: boolAttr(medium, 'autoplay'),\n            loop: boolAttr(medium, 'loop'),\n            muted: boolAttr(medium, 'muted'),\n            controls: boolAttr(medium, 'controls'),\n            tracks: tracks\n        };\n    }\n\n    applyMediumProperties() {\n        const properties = this.getMediumProperties();\n        if (!properties) {\n            return;\n        }\n\n        const applyTrackProperties = (track, properties) => {\n            track.querySelector(this.SELECTORS.TRACK_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value = properties.src;\n            track.querySelector(this.SELECTORS.TRACK_LANG_INPUT).value = properties.srclang;\n            track.querySelector(this.SELECTORS.TRACK_LABEL_INPUT).value = properties.label;\n            track.querySelector(this.SELECTORS.TRACK_DEFAULT_SELECT).checked = properties.defaultTrack;\n        };\n\n        const tabPane = this.form.querySelector('.root.tab-content > .tab-pane#' + this.editor.getElement().id +\n            '_' + properties.type.toLowerCase());\n\n        // Populate sources.\n        tabPane.querySelector(this.SELECTORS.MEDIA_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value = properties.sources[0];\n        properties.sources.slice(1).forEach(source => {\n            this.addMediaSourceComponent(tabPane.querySelector(this.SELECTORS.MEDIA_SOURCE + ' .addcomponent'), newComponent => {\n                newComponent.querySelector(this.SELECTORS.URL_INPUT).value = source;\n            });\n        });\n\n        // Populate tracks.\n        for (const [key, value] of Object.entries(properties.tracks)) {\n            const trackData = value.length ? value : [{src: '', srclang: '', label: '', defaultTrack: false}];\n            const paneSelector = this.SELECTORS['TRACK_' + key.toUpperCase() + '_PANE'];\n\n            applyTrackProperties(tabPane.querySelector(paneSelector + ' ' + this.SELECTORS.TRACK), trackData[0]);\n            trackData.slice(1).forEach(track => {\n                this.addTrackComponent(\n                    tabPane.querySelector(paneSelector + ' ' + this.SELECTORS.TRACK + ' .addcomponent'), newComponent => {\n                        applyTrackProperties(newComponent, track);\n                    });\n            });\n        }\n\n        // Populate values.\n        tabPane.querySelector(this.SELECTORS.TITLE_INPUT).value = properties.title;\n        tabPane.querySelector(this.SELECTORS.MEDIA_CONTROLS_TOGGLE).checked = properties.controls;\n        tabPane.querySelector(this.SELECTORS.MEDIA_AUTOPLAY_TOGGLE).checked = properties.autoplay;\n        tabPane.querySelector(this.SELECTORS.MEDIA_MUTE_TOGGLE).checked = properties.muted;\n        tabPane.querySelector(this.SELECTORS.MEDIA_LOOP_TOGGLE).checked = properties.loop;\n\n        // Determine medium type.\n        const mediumType = this.getMediumTypeFromTabPane(tabPane);\n\n        if (mediumType === 'video') {\n            // Populate values unique for video.\n            tabPane.querySelector(this.SELECTORS.POSTER_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value = properties.poster;\n            tabPane.querySelector(this.SELECTORS.WIDTH_INPUT).value = properties.width;\n            tabPane.querySelector(this.SELECTORS.HEIGHT_INPUT).value = properties.height;\n        }\n\n        // Switch to the correct tab.\n        // Remove active class from all tabs + tab panes.\n        tabPane.parentElement.querySelector('.active').classList.remove('active');\n        this.form.querySelectorAll('.root.nav-tabs .nav-item a').forEach(item => {\n            item.classList.remove('active');\n        });\n\n        // Add active class to the desired tab and tab pane.\n        tabPane.classList.add('active');\n        this.form.querySelector(this.SELECTORS[mediumType.toUpperCase() + '_TAB'] + ' a').classList.add('active');\n    }\n\n    prepareMoodleLang() {\n        const moodleLangs = getMoodleLang(this.editor);\n        const currentlang = moodleLangs.currentlang;\n        const langsinstalled = moodleLangs.installed;\n        const langsavailable = moodleLangs.available;\n\n        let result = {};\n        let installed = [];\n        let available = [];\n\n        for (const [key, value] of Object.entries(langsinstalled)) {\n            installed.push({\n                lang: value,\n                code: key,\n                default: key === currentlang,\n            });\n        }\n\n        for (const [key, value] of Object.entries(langsavailable)) {\n            available.push({\n                lang: value,\n                code: key,\n                default: key === currentlang,\n            });\n        }\n\n        result.installed = installed;\n        result.available = available;\n\n        return result;\n    }\n\n    getMoodleLangObj(subtitleLang) {\n        const moodleLangs = getMoodleLang(this.editor);\n        const langsavailable = moodleLangs.available;\n\n        let result = false;\n        for (const [key, value] of Object.entries(langsavailable)) {\n            if (key === subtitleLang) {\n                result = {\n                    lang: value,\n                    code: key,\n                };\n            }\n        }\n\n        return result;\n    }\n\n    filePickerCallback(params, element, fpType, self) {\n        if (params.url !== '') {\n            const tabPane = element.closest('.tab-pane');\n            element.closest(self.SELECTORS.SOURCE).querySelector(self.SELECTORS.URL_INPUT).value = params.url;\n\n            if (tabPane.id === self.editor.getElement().id + '_' + self.CSS.LINK) {\n                tabPane.querySelector(self.SELECTORS.NAME_INPUT).value = params.file;\n            }\n\n            if (fpType === 'subtitle') {\n                const subtitleLang = params.file.split('.vtt')[0].split('-').slice(-1)[0];\n                const langObj = this.getMoodleLangObj(subtitleLang);\n                if (langObj) {\n                    element.closest(self.SELECTORS.TRACK).querySelector(self.SELECTORS.TRACK_LABEL_INPUT).value =\n                        langObj.lang.trim();\n                    element.closest(self.SELECTORS.TRACK).querySelector(self.SELECTORS.TRACK_LANG_INPUT).value = langObj.code;\n                }\n            }\n        }\n    }\n\n    addMediaSourceComponent(element, callback) {\n        const sourceElement = element.closest(this.SELECTORS.SOURCE + this.SELECTORS.MEDIA_SOURCE);\n        const clone = sourceElement.cloneNode(true);\n\n        sourceElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        sourceElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        sourceElement.parentNode.insertBefore(clone, sourceElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeMediaSourceComponent(element) {\n        const sourceElement = element.closest(this.SELECTORS.SOURCE + this.SELECTORS.MEDIA_SOURCE);\n        sourceElement.remove();\n    }\n\n    addTrackComponent(element, callback) {\n        const trackElement = element.closest(this.SELECTORS.TRACK);\n        const clone = trackElement.cloneNode(true);\n\n        trackElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        trackElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        trackElement.parentNode.insertBefore(clone, trackElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeTrackComponent(element) {\n        const sourceElement = element.closest(this.SELECTORS.TRACK);\n        sourceElement.remove();\n    }\n\n    getMediumTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-medium-type');\n    }\n\n    getTrackTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-track-kind');\n    }\n\n    getMediaHTML() {\n        const mediumType = this.getMediumTypeFromTabPane(this.form.querySelector('.root.tab-content > .tab-pane.active'));\n        const tabContent = this.form.querySelector(this.SELECTORS[mediumType.toUpperCase() + '_PANE']);\n\n        return this['getMediaHTML' + mediumType[0].toUpperCase() + mediumType.substr(1)](tabContent);\n    }\n\n    getMediaHTMLLink(tab) {\n        const context = {\n            url: tab.querySelector(this.SELECTORS.URL_INPUT).value,\n            name: tab.querySelector(this.SELECTORS.NAME_INPUT).value || false\n        };\n\n        return context.url ? Templates.render('tiny_media/embed_media_link', context) : '';\n    }\n\n    getMediaHTMLVideo(tab) {\n        let context = this.getContextForMediaHTML(tab);\n        context.width = tab.querySelector(this.SELECTORS.WIDTH_INPUT).value || false;\n        context.height = tab.querySelector(this.SELECTORS.HEIGHT_INPUT).value || false;\n        context.poster = tab.querySelector(this.SELECTORS.POSTER_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value || false;\n\n        return context.sources.length ? Templates.render('tiny_media/embed_media_video', context) : '';\n    }\n\n    getMediaHTMLAudio(tab) {\n        let context = this.getContextForMediaHTML(tab);\n\n        return context.sources.length ? Templates.render('tiny_media/embed_media_audio', context) : '';\n    }\n\n    getContextForMediaHTML(tab) {\n        let tracks = [];\n\n        tab.querySelectorAll(this.SELECTORS.TRACK).forEach(track => {\n            tracks.push({\n                track: track.querySelector(this.SELECTORS.TRACK_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value,\n                kind: this.getTrackTypeFromTabPane(track.closest('.tab-pane')),\n                label: track.querySelector(this.SELECTORS.TRACK_LABEL_INPUT).value ||\n                    track.querySelector(this.SELECTORS.TRACK_LANG_INPUT).value,\n                srclang: track.querySelector(this.SELECTORS.TRACK_LANG_INPUT).value,\n                defaultTrack: track.querySelector(this.SELECTORS.TRACK_DEFAULT_SELECT).checked ? \"true\" : null\n            });\n        });\n\n        let sources = [];\n        tab.querySelectorAll(this.SELECTORS.MEDIA_SOURCE + ' ' + this.SELECTORS.URL_INPUT).forEach(source => {\n            if (source.value) {\n                sources.push(source.value);\n            }\n        });\n\n        return {\n            sources: sources,\n            description: tab.querySelector(this.SELECTORS.MEDIA_SOURCE + ' ' + this.SELECTORS.URL_INPUT).value || false,\n            tracks: tracks.filter(track => {\n                return !!track.track;\n            }),\n            showControls: tab.querySelector(this.SELECTORS.MEDIA_CONTROLS_TOGGLE).checked,\n            autoplay: tab.querySelector(this.SELECTORS.MEDIA_AUTOPLAY_TOGGLE).checked,\n            muted: tab.querySelector(this.SELECTORS.MEDIA_MUTE_TOGGLE).checked,\n            loop: tab.querySelector(this.SELECTORS.MEDIA_LOOP_TOGGLE).checked,\n            title: tab.querySelector(this.SELECTORS.TITLE_INPUT).value || false\n        };\n    }\n\n    registerEventListeners() {\n        if (this.eventInitialized) {\n            return;\n        }\n        const self = this;\n        this.eventInitialized = true;\n        if (this.canShowFilePicker) {\n            document.addEventListener('click', e => {\n                const element = e.target;\n                const mediaBrowser = element.closest(this.SELECTORS.MEDIA_BROWSER);\n                if (mediaBrowser) {\n                    e.preventDefault();\n                    let fpType = 'media';\n                    if (element.closest(this.SELECTORS.POSTER_SOURCE)) {\n                        fpType = 'image';\n                    }\n                    if (element.closest(this.SELECTORS.TRACK_SOURCE)) {\n                        fpType = 'subtitle';\n                    }\n                    displayFilepicker(this.editor, fpType).then((params) => {\n                        this.filePickerCallback(params, element, fpType, self);\n                    }).catch();\n                }\n\n                const addComponentSourceAction = element.closest(this.SELECTORS.MEDIA_SOURCE + ' .addcomponent');\n                if (addComponentSourceAction) {\n                    e.preventDefault();\n                    this.addMediaSourceComponent(element);\n                }\n\n                const removeComponentSourceAction = element.closest(this.SELECTORS.MEDIA_SOURCE + ' .removecomponent');\n                if (removeComponentSourceAction) {\n                    e.preventDefault();\n                    this.removeMediaSourceComponent(element);\n                }\n\n                const addComponentTrackAction = element.closest(this.SELECTORS.TRACK + ' .addcomponent');\n                if (addComponentTrackAction) {\n                    e.preventDefault();\n                    this.addTrackComponent(element);\n                }\n\n                const removeComponentTrackAction = element.closest(this.SELECTORS.TRACK + ' .removecomponent');\n                if (removeComponentTrackAction) {\n                    e.preventDefault();\n                    this.removeTrackComponent(element);\n                }\n\n                // Only allow one track per tab to be selected as \"default\".\n                const trackDefaultAction = element.closest(this.SELECTORS.TRACK_DEFAULT_SELECT);\n                if (trackDefaultAction && trackDefaultAction.checked) {\n                    const getKind = el => {\n                        return this.getTrackTypeFromTabPane(el.parentElement.closest('.tab-pane'));\n                    };\n\n                    element.parentElement\n                        .closest('.root.tab-content')\n                        .querySelectorAll(this.SELECTORS.TRACK_DEFAULT_SELECT)\n                        .forEach(select => {\n                            if (select !== element && getKind(element) === getKind(select)) {\n                                select.checked = false;\n                            }\n                        });\n                }\n\n                const submitAction = element.closest(this.SELECTORS.INPUTSUBMIT);\n                if (submitAction) {\n                    e.preventDefault();\n                    const mediaHTML = this.getMediaHTML();\n                    if (mediaHTML) {\n                        mediaHTML.then(html => {\n                            this.editor.insertContent(html);\n                            this.currentModal.destroy();\n                        });\n                    }\n                }\n            });\n        }\n    }\n};\n"],"names":["constructor","editor","LINK","VIDEO","AUDIO","SUBTITLES","CAPTIONS","DESCRIPTIONS","CHAPTERS","METADATA","FORM","SOURCE","TRACK","MEDIA_SOURCE","MEDIA_BROWSER","LINK_SOURCE","POSTER_SOURCE","TRACK_SOURCE","DISPLAY_OPTIONS","NAME_INPUT","TITLE_INPUT","URL_INPUT","POSTER_SIZE","LINK_SIZE","WIDTH_INPUT","HEIGHT_INPUT","TRACK_KIND_INPUT","TRACK_LABEL_INPUT","TRACK_LANG_INPUT","TRACK_DEFAULT_SELECT","MEDIA_CONTROLS_TOGGLE","MEDIA_AUTOPLAY_TOGGLE","MEDIA_MUTE_TOGGLE","MEDIA_LOOP_TOGGLE","ADVANCED_SETTINGS","INPUTSUBMIT","this","MEDIA_TYPES","toLowerCase","TRACK_SUBTITLES","TRACK_KINDS","TRACK_CAPTIONS","TRACK_DESCRIPTIONS","TRACK_CHAPTERS","TRACK_METADATA","CSS","LINK_TAB","LINK_PANE","VIDEO_TAB","VIDEO_PANE","AUDIO_TAB","AUDIO_PANE","TRACK_SUBTITLES_TAB","TRACK_SUBTITLES_PANE","TRACK_CAPTIONS_TAB","TRACK_CAPTIONS_PANE","TRACK_DESCRIPTIONS_TAB","TRACK_DESCRIPTIONS_PANE","TRACK_CHAPTERS_TAB","TRACK_CHAPTERS_PANE","TRACK_METADATA_TAB","TRACK_METADATA_PANE","addSourceHelpString","tracksHelpString","subtitlesHelpString","captionsHelpString","descriptionsHelpString","chaptersHelpString","metadataHelpString","Promise","all","component","languages","prepareMoodleLang","Modal","create","type","types","DEFAULT","title","body","Templates","render","elementid","getElement","id","showfilepicker","canShowFilePicker","addsourcehelpicon","text","trackshelpicon","subtitleshelpicon","captionshelpicon","descriptionshelpicon","chaptershelpicon","metadatahelpicon","langsinstalled","installed","langsavailable","available","then","modal","currentModal","getRoot","on","ModalEvents","bodyRendered","form","document","querySelector","applyMediumProperties","registerEventListeners","hidden","destroy","show","getSelectedMedia","mediaElm","selection","getNode","nodeName","getMediumProperties","boolAttr","elem","attr","hasAttribute","getAttribute","tracks","subtitles","captions","descriptions","chapters","metadata","sources","medium","querySelectorAll","forEach","track","push","src","srclang","label","defaultTrack","source","poster","width","height","autoplay","loop","muted","controls","properties","applyTrackProperties","SELECTORS","value","checked","tabPane","slice","addMediaSourceComponent","newComponent","key","Object","entries","trackData","length","paneSelector","toUpperCase","addTrackComponent","mediumType","getMediumTypeFromTabPane","parentElement","classList","remove","item","add","moodleLangs","currentlang","result","lang","code","default","getMoodleLangObj","subtitleLang","filePickerCallback","params","element","fpType","self","url","closest","file","split","langObj","trim","callback","sourceElement","clone","cloneNode","parentNode","insertBefore","nextSibling","removeMediaSourceComponent","trackElement","removeTrackComponent","getTrackTypeFromTabPane","getMediaHTML","tabContent","substr","getMediaHTMLLink","tab","context","name","getMediaHTMLVideo","getContextForMediaHTML","getMediaHTMLAudio","kind","description","filter","showControls","eventInitialized","addEventListener","e","target","preventDefault","catch","trackDefaultAction","getKind","el","select","mediaHTML","html","insertContent"],"mappings":"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"}