define("tiny_media/plugin",["exports","editor_tiny/loader","core/notification","editor_tiny/utils","./upload-handler"],(function(_exports,_loader,_notification,TinyUtils,_uploadHandler){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,TinyUtils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * Tiny Media plugin for Moodle.
   *
   * @module      tiny_media/plugin
   * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(TinyUtils),_uploadHandler=(obj=_uploadHandler)&&obj.__esModule?obj:{default:obj};const askTheQuestion=(editor,question)=>{(0,_notification.saveCancel)("Title",question,"Yes",(()=>{editor.setContent('<span data-identifier="SOMEVALUE">'+editor.getContent()+"</span>"),editor.insertContent("Inserted some content! :)")}))};var _default=new Promise((async resolve=>{const tinyMCE=await(0,_loader.getTinyMCE)();return tinyMCE.PluginManager.add("tiny_media/plugin",(editor=>(editor.ui.registry.addButton("tiny_media/image",{icon:"image",text:"Image...",onAction:function(){askTheQuestion(editor,"Did you click the button?")}}),editor.ui.registry.addMenuItem("tiny_media/image",{icon:"image",text:"Image...",onAction:function(){askTheQuestion(editor,"Did you click the Menu item?")}}),editor.ui.registry.addToggleButton("tiny_media/imageimage",{icon:"image",tooltip:"Insert/edit image",onAction:()=>{askTheQuestion(editor,"Did you click the Menu item?")},onSetup:buttonApi=>{var a;return buttonApi.setActive((a=(editor=>{const imgElm=editor.selection.getNode(),figureElm=editor.dom.getParent(imgElm,"figure.image");return figureElm?editor.dom.select("img",figureElm)[0]:imgElm&&("IMG"!==imgElm.nodeName||(imgElm=>"IMG"===imgElm.nodeName&&(imgElm.hasAttribute("data-mce-object")||imgElm.hasAttribute("data-mce-placeholder")))(imgElm))?null:imgElm})(editor),!(a=>null==a)(a))),editor.selection.selectorChangedWithUnbind("img:not([data-mce-object]):not([data-mce-placeholder]),figure.image",buttonApi.setActive).unbind}}),editor.ui.registry.addButton("tiny_media/video",{text:"Video",onAction:function(){askTheQuestion(editor,"Did you click the button?")}}),editor.ui.registry.addMenuItem("tiny_media/video",{text:"Insert video",onAction:function(){askTheQuestion(editor,"Did you click the Menu item?")}}),{name:"Media plugin",url:"https://moodle.org/"}))),resolve(["tiny_media/plugin",{configure:()=>({images_upload_handler:(blobInfo,progress)=>(0,_uploadHandler.default)(tinyMCE.activeEditor,blobInfo,progress),file_picker_callback:async(cb,value,meta)=>{const editor=tinyMCE.activeEditor,newFile=await TinyUtils.displayFilepicker(editor,meta.filetype);cb(newFile.url,{alt:newFile.file})}})}]),tinyMCE}));return _exports.default=_default,_exports.default}));

//# sourceMappingURL=plugin.min.js.map